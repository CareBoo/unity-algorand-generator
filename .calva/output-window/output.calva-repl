(use 'algoapi-gen.types :reload-all)
nil
clj꞉algoapi-gen.core꞉> 
(get-type-defs algod)
; Execution error (ArityException) at algoapi-gen.types/with-last-info (types.clj:134).
; Wrong number of args (0) passed to: clojure.lang.PersistentArrayMap
clj꞉algoapi-gen.core꞉> 
nil
clj꞉algoapi-gen.core꞉> 
; Error printing return value (NullPointerException) at clojure.string/ends-with? (string.clj:370).
; Cannot invoke "Object.toString()" because "s" is null
clj꞉algoapi-gen.core꞉> 
nil
clj꞉algoapi-gen.core꞉> 
; Execution error (ArityException) at algoapi-gen.types/with-property-info (types.clj:126).
; Wrong number of args (0) passed to: clojure.lang.PersistentArrayMap
clj꞉algoapi-gen.core꞉> 
#'algoapi-gen.types/with-property-info
clj꞉algoapi-gen.types꞉> 
(use 'algoapi-gen.types :reload-all)
nil
clj꞉algoapi-gen.types꞉> 
(get-type-defs algod)
; Syntax error compiling at (.calva/output-window/output.calva-repl:23:1).
; Unable to resolve symbol: algod in this context
clj꞉algoapi-gen.types꞉> 
; Evaluating file: core.clj
#'algoapi-gen.core/-main
clj꞉algoapi-gen.core꞉> 
(def algod (read-oapi :algod))
#'algoapi-gen.core/algod
clj꞉algoapi-gen.core꞉> 
(get-type-defs algod)
; Error printing return value (NullPointerException) at clojure.string/ends-with? (string.clj:370).
; Cannot invoke "Object.toString()" because "s" is null
clj꞉algoapi-gen.core꞉> 
(->> algod
    (:components)
    (:responses)
    (get-type-defs-responses)
    (map :properties)
     (set))
#{({:api-name "partId", :field-name "partId", :property-name "PartId", :type "string", :description "encoding of the participation ID."}) ({:api-name "app-local-state", :field-name "appLocalState", :property-name "AppLocalState", :type "ApplicationLocalState", :description nil} {:api-name "created-app", :field-name "createdApp", :property-name "CreatedApp", :type "ApplicationParams", :description nil} {:api-name "round", :field-name "round", :property-name "Round", :type "ulong", :description "The round for which this information is relevant."}) ({:api-name "txId", :field-name "txId", :property-name "TxId", :type "string", :description "encoding of the transaction hash."}) ({:api-name "asset-holding", :field-name "assetHolding", :property-name "AssetHolding", :type "AssetHolding", :description nil} {:api-name "created-asset", :field-name "createdAsset", :property-name "CreatedAsset", :type "AssetParams", :description nil} {:api-name "round", :field-name "round", :property-name "Round", :type "ulong", :description "The round for which this information is relevant."}) ({:api-name "top-transactions", :field-name "topTransactions", :property-name "TopTransactions", :type "SignedTxn[]", :description "An array of signed transaction objects."} {:api-name "total-transactions", :field-name "totalTransactions", :property-name "TotalTransactions", :type "ulong", :description "Total number of transactions in the pool."}) ({:api-name "hashtype", :field-name "hashtype", :property-name "Hashtype", :type "HashType", :description "The type of hash function used to create the proof, must be one of:\n* sumhash \n* sha512_256"} {:api-name "idx", :field-name "idx", :property-name "Idx", :type "ulong", :description "Index of the transaction in the block's payset."} {:api-name "proof", :field-name "proof", :property-name "Proof", :type "string", :description "Merkle proof of transaction membership."} {:api-name "stibhash", :field-name "stibhash", :property-name "Stibhash", :type "string", :description "Hash of SignedTxnInBlock for verifying proof."} {:api-name "treedepth", :field-name "treedepth", :property-name "Treedepth", :type "ulong", :description "Represents the depth of the tree that is being proven, i.e. the number of edges from a leaf to the root."}) ({:api-name "current_round", :field-name "current_round", :property-name "Current_round", :type "ulong", :description "Round"} {:api-name "online-money", :field-name "onlineMoney", :property-name "OnlineMoney", :type "ulong", :description "OnlineMoney"} {:api-name "total-money", :field-name "totalMoney", :property-name "TotalMoney", :type "ulong", :description "TotalMoney"}) ({:api-name "block", :field-name "block", :property-name "Block", :type "BlockHeader", :description "Block header data."} {:api-name "cert", :field-name "cert", :property-name "Cert", :type "BlockCertificate", :description "Optional certificate object. This is only included when the format is set to message pack."}) ({:api-name "hash", :field-name "hash", :property-name "Hash", :type "string", :description "base32 SHA512_256 of program bytes (Address style)"} {:api-name "result", :field-name "result", :property-name "Result", :type "string", :description "base64 encoded program bytes"}) ({:api-name "consensus-version", :field-name "consensusVersion", :property-name "ConsensusVersion", :type "string", :description "ConsensusVersion indicates the consensus protocol version\nas of LastRound."} {:api-name "fee", :field-name "fee", :property-name "Fee", :type "ulong", :description "Fee is the suggested transaction fee\nFee is in units of micro-Algos per byte.\nFee may fall to zero but transactions must still have a fee of\nat least MinTxnFee for the current network protocol."} {:api-name "genesis-hash", :field-name "genesisHash", :property-name "GenesisHash", :type "string", :description "GenesisHash is the hash of the genesis block."} {:api-name "genesis-id", :field-name "genesisId", :property-name "GenesisId", :type "string", :description "GenesisID is an ID listed in the genesis block."} {:api-name "last-round", :field-name "lastRound", :property-name "LastRound", :type "ulong", :description "LastRound indicates the last round seen"} {:api-name "min-fee", :field-name "minFee", :property-name "MinFee", :type "ulong", :description "The minimum transaction fee (not per byte) required for the\ntxn to validate for the current network protocol."}) ({:api-name "error", :field-name "error", :property-name "Error", :type "string", :description nil} {:api-name "protocol-version", :field-name "protocolVersion", :property-name "ProtocolVersion", :type "string", :description "Protocol version is the protocol version Dryrun was operated under."} {:api-name "txns", :field-name "txns", :property-name "Txns", :type "DryrunTxnResult[]", :description nil}) ({:api-name "catchup-message", :field-name "catchupMessage", :property-name "CatchupMessage", :type "string", :description "Catchup start response string"}) ({:api-name "stopped-at-unsupported-round", :field-name "stoppedAtUnsupportedRound", :property-name "StoppedAtUnsupportedRound", :type "bool", :description "StoppedAtUnsupportedRound indicates that the node does not support the new rounds and has stopped making progress"} {:api-name "catchpoint-total-blocks", :field-name "catchpointTotalBlocks", :property-name "CatchpointTotalBlocks", :type "ulong", :description "The total number of blocks that are required to complete the current catchpoint catchup"} {:api-name "last-version", :field-name "lastVersion", :property-name "LastVersion", :type "string", :description "LastVersion indicates the last consensus version supported"} {:api-name "next-version-round", :field-name "nextVersionRound", :property-name "NextVersionRound", :type "ulong", :description "NextVersionRound is the round at which the next consensus version will apply"} {:api-name "catchpoint-total-accounts", :field-name "catchpointTotalAccounts", :property-name "CatchpointTotalAccounts", :type "ulong", :description "The total number of accounts included in the current catchpoint"} {:api-name "time-since-last-round", :field-name "timeSinceLastRound", :property-name "TimeSinceLastRound", :type "ulong", :description "TimeSinceLastRound in nanoseconds"} {:api-name "next-version", :field-name "nextVersion", :property-name "NextVersion", :type "string", :description "NextVersion of consensus protocol to use"} {:api-name "catchpoint-verified-accounts", :field-name "catchpointVerifiedAccounts", :property-name "CatchpointVerifiedAccounts", :type "ulong", :description "The number of accounts from the current catchpoint that have been verified so far as part of the catchup"} {:api-name "catchup-time", :field-name "catchupTime", :property-name "CatchupTime", :type "ulong", :description "CatchupTime in nanoseconds"} {:api-name "last-catchpoint", :field-name "lastCatchpoint", :property-name "LastCatchpoint", :type "string", :description "The last catchpoint seen by the node"} {:api-name "last-round", :field-name "lastRound", :property-name "LastRound", :type "ulong", :description "LastRound indicates the last round seen"} {:api-name "next-version-supported", :field-name "nextVersionSupported", :property-name "NextVersionSupported", :type "bool", :description "NextVersionSupported indicates whether the next consensus version is supported by this node"} {:api-name "catchpoint", :field-name "catchpoint", :property-name "Catchpoint", :type "string", :description "The current catchpoint that is being caught up to"} {:api-name "catchpoint-acquired-blocks", :field-name "catchpointAcquiredBlocks", :property-name "CatchpointAcquiredBlocks", :type "ulong", :description "The number of blocks that have already been obtained by the node as part of the catchup"} {:api-name "catchpoint-processed-accounts", :field-name "catchpointProcessedAccounts", :property-name "CatchpointProcessedAccounts", :type "ulong", :description "The number of accounts from the current catchpoint that have been processed so far as part of the catchup"}) ({:api-name "catchup-message", :field-name "catchupMessage", :property-name "CatchupMessage", :type "string", :description "Catchup abort response string"})}
clj꞉algoapi-gen.core꞉> 
(->> algod
    (:components)
    (:responses)
    (get-type-defs-responses)
    (map :properties)
     (flatten)
     (map :type)
     (set))
#{"string" "BlockCertificate" "AssetHolding" "AssetParams" "SignedTxn[]" "DryrunTxnResult[]" "BlockHeader" "ApplicationLocalState" "bool" "ulong" "ApplicationParams" "HashType"}
clj꞉algoapi-gen.core꞉> 
(->> algod
    (:components)
    (:responses)
    (get-type-defs-responses)
    (map :properties)
     (flatten)
     (map :type)
     (filter nil?))
()
clj꞉algoapi-gen.core꞉> 
(->> algod
     (:components)
     (:schemas)
     (get-type-defs-schemas)
     (map :properties)
     (flatten)
     (filter #(nil? (:type %))))
(nil)
clj꞉algoapi-gen.core꞉> 
({:api-name "data", :field-name "data", :property-name "Data", :type nil, :description nil})
clj꞉algoapi-gen.core꞉> 
; Execution error (ArityException) at algoapi-gen.core/eval10128 (form-init16268875124391411790.clj:74).
; Wrong number of args (0) passed to: clojure.lang.PersistentArrayMap
clj꞉algoapi-gen.core꞉> 
(use 'algoapi-gen.types :reload-all)
nil
clj꞉algoapi-gen.core꞉> 
(get-type-defs algod)
({:name "CatchpointAbortResponse", :properties ({:api-name "catchup-message", :field-name "catchupMessage", :property-name "CatchupMessage", :type "string", :description "Catchup abort response string", :is-string true, :is-array false}), :description "An catchpoint abort response."} {:name "AccountAssetResponse", :properties ({:api-name "asset-holding", :field-name "assetHolding", :property-name "AssetHolding", :type "AssetHolding", :description nil, :is-string false, :is-array false} {:api-name "created-asset", :field-name "createdAsset", :property-name "CreatedAsset", :type "AssetParams", :description nil, :is-string false, :is-array false} {:api-name "round", :field-name "round", :property-name "Round", :type "ulong", :description "The round for which this information is relevant.", :is-string false, :is-array false}), :description nil} {:name "BlockResponse", :properties ({:api-name "block", :field-name "block", :property-name "Block", :type "BlockHeader", :description "Block header data.", :is-string false, :is-array false} {:api-name "cert", :field-name "cert", :property-name "Cert", :type "BlockCertificate", :description "Optional certificate object. This is only included when the format is set to message pack.", :is-string false, :is-array false}), :description nil} {:name "CatchpointStartResponse", :properties ({:api-name "catchup-message", :field-name "catchupMessage", :property-name "CatchupMessage", :type "string", :description "Catchup start response string", :is-string true, :is-array false}), :description "An catchpoint start response."} {:name "PostParticipationResponse", :properties ({:api-name "partId", :field-name "partId", :property-name "PartId", :type "string", :description "encoding of the participation ID.", :is-string true, :is-array false}), :description nil} {:name "CompileResponse", :properties ({:api-name "hash", :field-name "hash", :property-name "Hash", :type "string", :description "base32 SHA512_256 of program bytes (Address style)", :is-string true, :is-array false} {:api-name "result", :field-name "result", :property-name "Result", :type "string", :description "base64 encoded program bytes", :is-string true, :is-array false}), :description nil} {:name "ProofResponse", :properties ({:api-name "hashtype", :field-name "hashtype", :property-name "Hashtype", :type "HashType", :description "The type of hash function used to create the proof, must be one of:\n* sumhash \n* sha512_256", :is-string false, :is-array false} {:api-name "idx", :field-name "idx", :property-name "Idx", :type "ulong", :description "Index of the transaction in the block's payset.", :is-string false, :is-array false} {:api-name "proof", :field-name "proof", :property-name "Proof", :type "string", :description "Merkle proof of transaction membership.", :is-string true, :is-array false} {:api-name "stibhash", :field-name "stibhash", :property-name "Stibhash", :type "string", :description "Hash of SignedTxnInBlock for verifying proof.", :is-string true, :is-array false} {:api-name "treedepth", :field-name "treedepth", :property-name "Treedepth", :type "ulong", :description "Represents the depth of the tree that is being proven, i.e. the number of edges from a leaf to the root.", :is-string false, :is-array false}), :description nil} {:name "NodeStatusResponse", :properties ({:api-name "stopped-at-unsupported-round", :field-name "stoppedAtUnsupportedRound", :property-name "StoppedAtUnsupportedRound", :type "bool", :description "StoppedAtUnsupportedRound indicates that the node does not support the new rounds and has stopped making progress", :is-string false, :is-array false} {:api-name "catchpoint-total-blocks", :field-name "catchpointTotalBlocks", :property-name "CatchpointTotalBlocks", :type "ulong", :description "The total number of blocks that are required to complete the current catchpoint catchup", :is-string false, :is-array false} {:api-name "last-version", :field-name "lastVersion", :property-name "LastVersion", :type "string", :description "LastVersion indicates the last consensus version supported", :is-string true, :is-array false} {:api-name "next-version-round", :field-name "nextVersionRound", :property-name "NextVersionRound", :type "ulong", :description "NextVersionRound is the round at which the next consensus version will apply", :is-string false, :is-array false} {:api-name "catchpoint-total-accounts", :field-name "catchpointTotalAccounts", :property-name "CatchpointTotalAccounts", :type "ulong", :description "The total number of accounts included in the current catchpoint", :is-string false, :is-array false} {:api-name "time-since-last-round", :field-name "timeSinceLastRound", :property-name "TimeSinceLastRound", :type "ulong", :description "TimeSinceLastRound in nanoseconds", :is-string false, :is-array false} {:api-name "next-version", :field-name "nextVersion", :property-name "NextVersion", :type "string", :description "NextVersion of consensus protocol to use", :is-string true, :is-array false} {:api-name "catchpoint-verified-accounts", :field-name "catchpointVerifiedAccounts", :property-name "CatchpointVerifiedAccounts", :type "ulong", :description "The number of accounts from the current catchpoint that have been verified so far as part of the catchup", :is-string false, :is-array false} {:api-name "catchup-time", :field-name "catchupTime", :property-name "CatchupTime", :type "ulong", :description "CatchupTime in nanoseconds", :is-string false, :is-array false} {:api-name "last-catchpoint", :field-name "lastCatchpoint", :property-name "LastCatchpoint", :type "string", :description "The last catchpoint seen by the node", :is-string true, :is-array false} {:api-name "last-round", :field-name "lastRound", :property-name "LastRound", :type "ulong", :description "LastRound indicates the last round seen", :is-string false, :is-array false} {:api-name "next-version-supported", :field-name "nextVersionSupported", :property-name "NextVersionSupported", :type "bool", :description "NextVersionSupported indicates whether the next consensus version is supported by this node", :is-string false, :is-array false} {:api-name "catchpoint", :field-name "catchpoint", :property-name "Catchpoint", :type "string", :description "The current catchpoint that is being caught up to", :is-string true, :is-array false} {:api-name "catchpoint-acquired-blocks", :field-name "catchpointAcquiredBlocks", :property-name "CatchpointAcquiredBlocks", :type "ulong", :description "The number of blocks that have already been obtained by the node as part of the catchup", :is-string false, :is-array false} {:api-name "catchpoint-processed-accounts", :field-name "catchpointProcessedAccounts", :property-name "CatchpointProcessedAccounts", :type "ulong", :description "The number of accounts from the current catchpoint that have been processed so far as part of the catchup", :is-string false, :is-array false}), :description "NodeStatus contains the information about a node status"} {:name "TransactionParametersResponse", :properties ({:api-name "consensus-version", :field-name "consensusVersion", :property-name "ConsensusVersion", :type "string", :description "ConsensusVersion indicates the consensus protocol version\nas of LastRound.", :is-string true, :is-array false} {:api-name "fee", :field-name "fee", :property-name "Fee", :type "ulong", :description "Fee is the suggested transaction fee\nFee is in units of micro-Algos per byte.\nFee may fall to zero but transactions must still have a fee of\nat least MinTxnFee for the current network protocol.", :is-string false, :is-array false} {:api-name "genesis-hash", :field-name "genesisHash", :property-name "GenesisHash", :type "string", :description "GenesisHash is the hash of the genesis block.", :is-string true, :is-array false} {:api-name "genesis-id", :field-name "genesisId", :property-name "GenesisId", :type "string", :description "GenesisID is an ID listed in the genesis block.", :is-string true, :is-array false} {:api-name "last-round", :field-name "lastRound", :property-name "LastRound", :type "ulong", :description "LastRound indicates the last round seen", :is-string false, :is-array false} {:api-name "min-fee", :field-name "minFee", :property-name "MinFee", :type "ulong", :description "The minimum transaction fee (not per byte) required for the\ntxn to validate for the current network protocol.", :is-string false, :is-array false}), :description "TransactionParams contains the parameters that help a client construct\na new transaction."} {:name "SupplyResponse", :properties ({:api-name "current_round", :field-name "current_round", :property-name "Current_round", :type "ulong", :description "Round", :is-string false, :is-array false} {:api-name "online-money", :field-name "onlineMoney", :property-name "OnlineMoney", :type "ulong", :description "OnlineMoney", :is-string false, :is-array false} {:api-name "total-money", :field-name "totalMoney", :property-name "TotalMoney", :type "ulong", :description "TotalMoney", :is-string false, :is-array false}), :description "Supply represents the current supply of MicroAlgos in the system"} {:name "PendingTransactionsResponse", :properties ({:api-name "top-transactions", :field-name "topTransactions", :property-name "TopTransactions", :type "SignedTxn[]", :description "An array of signed transaction objects.", :is-string false, :is-array true} {:api-name "total-transactions", :field-name "totalTransactions", :property-name "TotalTransactions", :type "ulong", :description "Total number of transactions in the pool.", :is-string false, :is-array false}), :description "PendingTransactions is an array of signed transactions exactly as they were submitted."} {:name "AccountApplicationResponse", :properties ({:api-name "app-local-state", :field-name "appLocalState", :property-name "AppLocalState", :type "ApplicationLocalState", :description nil, :is-string false, :is-array false} {:api-name "created-app", :field-name "createdApp", :property-name "CreatedApp", :type "ApplicationParams", :description nil, :is-string false, :is-array false} {:api-name "round", :field-name "round", :property-name "Round", :type "ulong", :description "The round for which this information is relevant.", :is-string false, :is-array false}), :description nil} {:name "PostTransactionsResponse", :properties ({:api-name "txId", :field-name "txId", :property-name "TxId", :type "string", :description "encoding of the transaction hash.", :is-string true, :is-array false}), :description nil} {:name "DryrunResponse", :properties ({:api-name "error", :field-name "error", :property-name "Error", :type "string", :description nil, :is-string true, :is-array false} {:api-name "protocol-version", :field-name "protocolVersion", :property-name "ProtocolVersion", :type "string", :description "Protocol version is the protocol version Dryrun was operated under.", :is-string true, :is-array false} {:api-name "txns", :field-name "txns", :property-name "Txns", :type "DryrunTxnResult[]", :description nil, :is-string false, :is-array true}), :description nil} {:name "ApplicationParams", :properties ({:api-name "approval-program", :field-name "approvalProgram", :property-name "ApprovalProgram", :type "CompiledTeal", :description "\\[approv\\] approval program.", :is-string false, :is-array false} {:api-name "clear-state-program", :field-name "clearStateProgram", :property-name "ClearStateProgram", :type "CompiledTeal", :description "\\[clearp\\] approval program.", :is-string false, :is-array false} {:api-name "creator", :field-name "creator", :property-name "Creator", :type "Address", :description "The address that created this application. This is the address where the parameters and global state for this application can be found.", :is-string false, :is-array false} {:api-name "extra-program-pages", :field-name "extraProgramPages", :property-name "ExtraProgramPages", :type "ulong", :description "\\[epp\\] the amount of extra program pages available to this app.", :is-string false, :is-array false} {:api-name "global-state", :field-name "globalState", :property-name "GlobalState", :type "TealKeyValueStore", :description nil, :is-string false, :is-array false} {:api-name "global-state-schema", :field-name "globalStateSchema", :property-name "GlobalStateSchema", :type "ApplicationStateSchema", :description nil, :is-string false, :is-array false} {:api-name "local-state-schema", :field-name "localStateSchema", :property-name "LocalStateSchema", :type "ApplicationStateSchema", :description nil, :is-string false, :is-array false}), :description "Stores the global information associated with an application."} {:name "TealValue", :properties ({:api-name "bytes", :field-name "bytes", :property-name "Bytes", :type "string", :description "\\[tb\\] bytes value.", :is-string true, :is-array false} {:api-name "type", :field-name "type", :property-name "Type", :type "ulong", :description "\\[tt\\] value type. Value `1` refers to **bytes**, value `2` refers to **uint**", :is-string false, :is-array false} {:api-name "uint", :field-name "uint", :property-name "Uint", :type "ulong", :description "\\[ui\\] uint value.", :is-string false, :is-array false}), :description "Represents a TEAL value."} {:name "ParticipationKey", :properties ({:api-name "address", :field-name "address", :property-name "Address", :type "Address", :description "Address the key was generated for.", :is-string false, :is-array false} {:api-name "effective-first-valid", :field-name "effectiveFirstValid", :property-name "EffectiveFirstValid", :type "ulong", :description "When registered, this is the first round it may be used.", :is-string false, :is-array false} {:api-name "effective-last-valid", :field-name "effectiveLastValid", :property-name "EffectiveLastValid", :type "ulong", :description "When registered, this is the last round it may be used.", :is-string false, :is-array false} {:api-name "id", :field-name "id", :property-name "Id", :type "string", :description "The key's ParticipationID.", :is-string true, :is-array false} {:api-name "key", :field-name "key", :property-name "Key", :type "AccountParticipation", :description nil, :is-string false, :is-array false} {:api-name "last-block-proposal", :field-name "lastBlockProposal", :property-name "LastBlockProposal", :type "ulong", :description "Round when this key was last used to propose a block.", :is-string false, :is-array false} {:api-name "last-state-proof", :field-name "lastStateProof", :property-name "LastStateProof", :type "ulong", :description "Round when this key was last used to generate a state proof.", :is-string false, :is-array false} {:api-name "last-vote", :field-name "lastVote", :property-name "LastVote", :type "ulong", :description "Round when this key was last used to vote.", :is-string false, :is-array false}), :description "Represents a participation key used by the node."} {:name "EvalDelta", :properties ({:api-name "action", :field-name "action", :property-name "Action", :type "ulong", :description "\\[at\\] delta action.", :is-string false, :is-array false} {:api-name "bytes", :field-name "bytes", :property-name "Bytes", :type "string", :description "\\[bs\\] bytes value.", :is-string true, :is-array false} {:api-name "uint", :field-name "uint", :property-name "Uint", :type "ulong", :description "\\[ui\\] uint value.", :is-string false, :is-array false}), :description "Represents a TEAL value delta."} {:name "ApplicationStateSchema", :properties ({:api-name "num-byte-slice", :field-name "numByteSlice", :property-name "NumByteSlice", :type "ulong", :description "\\[nbs\\] num of byte slices.", :is-string false, :is-array false} {:api-name "num-uint", :field-name "numUint", :property-name "NumUint", :type "ulong", :description "\\[nui\\] num of uints.", :is-string false, :is-array false}), :description "Specifies maximums on the number of each type that may be stored."} {:name "DryrunState", :properties ({:api-name "error", :field-name "error", :property-name "Error", :type "string", :description "Evaluation error if any", :is-string true, :is-array false} {:api-name "line", :field-name "line", :property-name "Line", :type "ulong", :description "Line number", :is-string false, :is-array false} {:api-name "pc", :field-name "pc", :property-name "Pc", :type "ulong", :description "Program counter", :is-string false, :is-array false} {:api-name "scratch", :field-name "scratch", :property-name "Scratch", :type "TealValue[]", :description nil, :is-string false, :is-array true} {:api-name "stack", :field-name "stack", :property-name "Stack", :type "TealValue[]", :description nil, :is-string false, :is-array true}), :description "Stores the TEAL eval step data"} {:name "BuildVersion", :properties ({:api-name "branch", :field-name "branch", :property-name "Branch", :type "string", :description nil, :is-string true, :is-array false} {:api-name "build_number", :field-name "build_number", :property-name "Build_number", :type "ulong", :description nil, :is-string false, :is-array false} {:api-name "channel", :field-name "channel", :property-name "Channel", :type "string", :description nil, :is-string true, :is-array false} {:api-name "commit_hash", :field-name "commit_hash", :property-name "Commit_hash", :type "string", :description nil, :is-string true, :is-array false} {:api-name "major", :field-name "major", :property-name "Major", :type "ulong", :description nil, :is-string false, :is-array false} {:api-name "minor", :field-name "minor", :property-name "Minor", :type "ulong", :description nil, :is-string false, :is-array false}), :description nil} {:name "DryrunRequest", :properties ({:api-name "accounts", :field-name "accounts", :property-name "Accounts", :type "Account[]", :description nil, :is-string false, :is-array true} {:api-name "apps", :field-name "apps", :property-name "Apps", :type "Application[]", :description nil, :is-string false, :is-array true} {:api-name "latest-timestamp", :field-name "latestTimestamp", :property-name "LatestTimestamp", :type "ulong", :description "LatestTimestamp is available to some TEAL scripts. Defaults to the latest confirmed timestamp this algod is attached to.", :is-string false, :is-array false} {:api-name "protocol-version", :field-name "protocolVersion", :property-name "ProtocolVersion", :type "string", :description "ProtocolVersion specifies a specific version string to operate under, otherwise whatever the current protocol of the network this algod is running in.", :is-string true, :is-array false} {:api-name "round", :field-name "round", :property-name "Round", :type "ulong", :description "Round is available to some TEAL scripts. Defaults to the current round on the network this algod is attached to.", :is-string false, :is-array false} {:api-name "sources", :field-name "sources", :property-name "Sources", :type "DryrunSource[]", :description nil, :is-string false, :is-array true} {:api-name "txns", :field-name "txns", :property-name "Txns", :type "byte[][]", :description nil, :is-string false, :is-array true}), :description "Request data type for dryrun endpoint. Given the Transactions and simulated ledger state upload, run TEAL scripts and return debugging information."} {:name "Asset", :properties ({:api-name "index", :field-name "index", :property-name "Index", :type "ulong", :description "unique asset identifier", :is-string false, :is-array false} {:api-name "params", :field-name "params", :property-name "Params", :type "AssetParams", :description nil, :is-string false, :is-array false}), :description "Specifies both the unique identifier and the parameters for an asset"} {:name "TealKeyValue", :properties ({:api-name "key", :field-name "key", :property-name "Key", :type "string", :description nil, :is-string true, :is-array false} {:api-name "value", :field-name "value", :property-name "Value", :type "TealValue", :description nil, :is-string false, :is-array false}), :description "Represents a key-value pair in an application store."} {:name "PendingTransactionResponse", :properties ({:api-name "pool-error", :field-name "poolError", :property-name "PoolError", :type "string", :description "Indicates that the transaction was kicked out of this node's transaction pool (and specifies why that happened).  An empty string indicates the transaction wasn't kicked out of this node's txpool due to an error.\n", :is-string true, :is-array false} {:api-name "logs", :field-name "logs", :property-name "Logs", :type "string[]", :description "\\[lg\\] Logs for the application being executed by this transaction.", :is-string false, :is-array true} {:api-name "sender-rewards", :field-name "senderRewards", :property-name "SenderRewards", :type "ulong", :description "Rewards in microalgos applied to the sender account.", :is-string false, :is-array false} {:api-name "closing-amount", :field-name "closingAmount", :property-name "ClosingAmount", :type "ulong", :description "Closing amount for the transaction.", :is-string false, :is-array false} {:api-name "txn", :field-name "txn", :property-name "Txn", :type "SignedTxn", :description "The raw signed transaction.", :is-string false, :is-array false} {:api-name "global-state-delta", :field-name "globalStateDelta", :property-name "GlobalStateDelta", :type "StateDelta", :description nil, :is-string false, :is-array false} {:api-name "asset-closing-amount", :field-name "assetClosingAmount", :property-name "AssetClosingAmount", :type "ulong", :description "The number of the asset's unit that were transferred to the close-to address.", :is-string false, :is-array false} {:api-name "confirmed-round", :field-name "confirmedRound", :property-name "ConfirmedRound", :type "ulong", :description "The round where this transaction was confirmed, if present.", :is-string false, :is-array false} {:api-name "application-index", :field-name "applicationIndex", :property-name "ApplicationIndex", :type "ulong", :description "The application index if the transaction was found and it created an application.", :is-string false, :is-array false} {:api-name "receiver-rewards", :field-name "receiverRewards", :property-name "ReceiverRewards", :type "ulong", :description "Rewards in microalgos applied to the receiver account.", :is-string false, :is-array false} {:api-name "inner-txns", :field-name "innerTxns", :property-name "InnerTxns", :type "PendingTransactionResponse[]", :description "Inner transactions produced by application execution.", :is-string false, :is-array true} {:api-name "asset-index", :field-name "assetIndex", :property-name "AssetIndex", :type "ulong", :description "The asset index if the transaction was found and it created an asset.", :is-string false, :is-array false} {:api-name "close-rewards", :field-name "closeRewards", :property-name "CloseRewards", :type "ulong", :description "Rewards in microalgos applied to the close remainder to account.", :is-string false, :is-array false} {:api-name "local-state-delta", :field-name "localStateDelta", :property-name "LocalStateDelta", :type "AccountStateDelta[]", :description "\\[ld\\] Local state key/value changes for the application being executed by this transaction.", :is-string false, :is-array true}), :description "Details about a pending transaction. If the transaction was recently confirmed, includes confirmation details like the round and reward details."} {:name "DryrunSource", :properties ({:api-name "app-index", :field-name "appIndex", :property-name "AppIndex", :type "ulong", :description nil, :is-string false, :is-array false} {:api-name "field-name", :field-name "fieldName", :property-name "FieldName", :type "string", :description "FieldName is what kind of sources this is. If lsig then it goes into the transactions[this.TxnIndex].LogicSig. If approv or clearp it goes into the Approval Program or Clear State Program of application[this.AppIndex].", :is-string true, :is-array false} {:api-name "source", :field-name "source", :property-name "Source", :type "string", :description nil, :is-string true, :is-array false} {:api-name "txn-index", :field-name "txnIndex", :property-name "TxnIndex", :type "ulong", :description nil, :is-string false, :is-array false}), :description "DryrunSource is TEAL source text that gets uploaded, compiled, and inserted into transactions or application state."} {:name "EvalDeltaKeyValue", :properties ({:api-name "key", :field-name "key", :property-name "Key", :type "string", :description nil, :is-string true, :is-array false} {:api-name "value", :field-name "value", :property-name "Value", :type "EvalDelta", :description nil, :is-string false, :is-array false}), :description "Key-value pairs for StateDelta."} {:name "AssetHolding", :properties ({:api-name "amount", :field-name "amount", :property-name "Amount", :type "ulong", :description "\\[a\\] number of units held.", :is-string false, :is-array false} {:api-name "asset-id", :field-name "assetId", :property-name "AssetId", :type "AssetIndex", :description "Asset ID of the holding.", :is-string false, :is-array false} {:api-name "is-frozen", :field-name "isFrozen", :property-name "IsFrozen", :type "bool", :description "\\[f\\] whether or not the holding is frozen.", :is-string false, :is-array false}), :description "Describes an asset held by an account.\n\nDefinition:\ndata/basics/userBalance.go : AssetHolding"} {:name "Account", :properties ({:api-name "amount", :field-name "amount", :property-name "Amount", :type "ulong", :description "\\[algo\\] total number of MicroAlgos in the account", :is-string false, :is-array false} {:api-name "address", :field-name "address", :property-name "Address", :type "string", :description "the account public key", :is-string true, :is-array false} {:api-name "rewards", :field-name "rewards", :property-name "Rewards", :type "ulong", :description "\\[ern\\] total rewards of MicroAlgos the account has received, including pending rewards.", :is-string false, :is-array false} {:api-name "amount-without-pending-rewards", :field-name "amountWithoutPendingRewards", :property-name "AmountWithoutPendingRewards", :type "ulong", :description "specifies the amount of MicroAlgos in the account, without the pending rewards.", :is-string false, :is-array false} {:api-name "apps-total-extra-pages", :field-name "appsTotalExtraPages", :property-name "AppsTotalExtraPages", :type "ulong", :description "\\[teap\\] the sum of all extra application program pages for this account.", :is-string false, :is-array false} {:api-name "total-assets-opted-in", :field-name "totalAssetsOptedIn", :property-name "TotalAssetsOptedIn", :type "ulong", :description "The count of all assets that have been opted in, equivalent to the count of AssetHolding objects held by this account.", :is-string false, :is-array false} {:api-name "assets", :field-name "assets", :property-name "Assets", :type "AssetHolding[]", :description "\\[asset\\] assets held by this account.\n\nNote the raw object uses `map[int] -> AssetHolding` for this type.", :is-string false, :is-array true} {:api-name "participation", :field-name "participation", :property-name "Participation", :type "AccountParticipation", :description nil, :is-string false, :is-array false} {:api-name "apps-total-schema", :field-name "appsTotalSchema", :property-name "AppsTotalSchema", :type "ApplicationStateSchema", :description nil, :is-string false, :is-array false} {:api-name "total-apps-opted-in", :field-name "totalAppsOptedIn", :property-name "TotalAppsOptedIn", :type "ulong", :description "The count of all applications that have been opted in, equivalent to the count of application local data (AppLocalState objects) stored in this account.", :is-string false, :is-array false} {:api-name "round", :field-name "round", :property-name "Round", :type "ulong", :description "The round for which this information is relevant.", :is-string false, :is-array false} {:api-name "pending-rewards", :field-name "pendingRewards", :property-name "PendingRewards", :type "ulong", :description "amount of MicroAlgos of pending rewards in this account.", :is-string false, :is-array false} {:api-name "created-apps", :field-name "createdApps", :property-name "CreatedApps", :type "Application[]", :description "\\[appp\\] parameters of applications created by this account including app global data.\n\nNote: the raw account uses `map[int] -> AppParams` for this type.", :is-string false, :is-array true} {:api-name "status", :field-name "status", :property-name "Status", :type "string", :description "\\[onl\\] delegation status of the account's MicroAlgos\n* Offline - indicates that the associated account is delegated.\n*  Online  - indicates that the associated account used as part of the delegation pool.\n*   NotParticipating - indicates that the associated account is neither a delegator nor a delegate.", :is-string true, :is-array false} {:api-name "sig-type", :field-name "sigType", :property-name "SigType", :type "SigType", :description "Indicates what type of signature is used by this account, must be one of:\n* sig\n* msig\n* lsig", :is-string false, :is-array false} {:api-name "auth-addr", :field-name "authAddr", :property-name "AuthAddr", :type "Address", :description "\\[spend\\] the address against which signing should be checked. If empty, the address of the current account is used. This field can be updated in any transaction by setting the RekeyTo field.", :is-string false, :is-array false} {:api-name "total-created-assets", :field-name "totalCreatedAssets", :property-name "TotalCreatedAssets", :type "ulong", :description "The count of all assets (AssetParams objects) created by this account.", :is-string false, :is-array false} {:api-name "min-balance", :field-name "minBalance", :property-name "MinBalance", :type "ulong", :description "MicroAlgo balance required by the account.\n\nThe requirement grows based on asset and application usage.", :is-string false, :is-array false} {:api-name "reward-base", :field-name "rewardBase", :property-name "RewardBase", :type "ulong", :description "\\[ebase\\] used as part of the rewards computation. Only applicable to accounts which are participating.", :is-string false, :is-array false} {:api-name "created-assets", :field-name "createdAssets", :property-name "CreatedAssets", :type "Asset[]", :description "\\[apar\\] parameters of assets created by this account.\n\nNote: the raw account uses `map[int] -> Asset` for this type.", :is-string false, :is-array true} {:api-name "apps-local-state", :field-name "appsLocalState", :property-name "AppsLocalState", :type "ApplicationLocalState[]", :description "\\[appl\\] applications local data stored in this account.\n\nNote the raw object uses `map[int] -> AppLocalState` for this type.", :is-string false, :is-array true} {:api-name "total-created-apps", :field-name "totalCreatedApps", :property-name "TotalCreatedApps", :type "ulong", :description "The count of all apps (AppParams objects) created by this account.", :is-string false, :is-array false}), :description "Account information at a given round.\n\nDefinition:\ndata/basics/userBalance.go : AccountData\n"} {:name "AccountStateDelta", :properties ({:api-name "address", :field-name "address", :property-name "Address", :type "string", :description nil, :is-string true, :is-array false} {:api-name "delta", :field-name "delta", :property-name "Delta", :type "StateDelta", :description nil, :is-string false, :is-array false}), :description "Application state delta."} {:name "Application", :properties ({:api-name "id", :field-name "id", :property-name "Id", :type "ulong", :description "\\[appidx\\] application index.", :is-string false, :is-array false} {:api-name "params", :field-name "params", :property-name "Params", :type "ApplicationParams", :description nil, :is-string false, :is-array false}), :description "Application index and its parameters"} {:name "ApplicationLocalState", :properties ({:api-name "id", :field-name "id", :property-name "Id", :type "ulong", :description "The application which this local state is for.", :is-string false, :is-array false} {:api-name "key-value", :field-name "keyValue", :property-name "KeyValue", :type "TealKeyValueStore", :description nil, :is-string false, :is-array false} {:api-name "schema", :field-name "schema", :property-name "Schema", :type "ApplicationStateSchema", :description nil, :is-string false, :is-array false}), :description "Stores local state associated with an application."} {:name "ErrorResponse", :properties ({:api-name "data", :field-name "data", :property-name "Data", :type "AlgoApiObject", :description nil, :is-string false, :is-array false} {:api-name "message", :field-name "message", :property-name "Message", :type "string", :description nil, :is-string true, :is-array false}), :description "An error response with optional data field."} {:name "AccountParticipation", :properties ({:api-name "selection-participation-key", :field-name "selectionParticipationKey", :property-name "SelectionParticipationKey", :type "string", :description "\\[sel\\] Selection public key (if any) currently registered for this round.", :is-string true, :is-array false} {:api-name "state-proof-key", :field-name "stateProofKey", :property-name "StateProofKey", :type "string", :description "\\[stprf\\] Root of the state proof key (if any)", :is-string true, :is-array false} {:api-name "vote-first-valid", :field-name "voteFirstValid", :property-name "VoteFirstValid", :type "ulong", :description "\\[voteFst\\] First round for which this participation is valid.", :is-string false, :is-array false} {:api-name "vote-key-dilution", :field-name "voteKeyDilution", :property-name "VoteKeyDilution", :type "ulong", :description "\\[voteKD\\] Number of subkeys in each batch of participation keys.", :is-string false, :is-array false} {:api-name "vote-last-valid", :field-name "voteLastValid", :property-name "VoteLastValid", :type "ulong", :description "\\[voteLst\\] Last round for which this participation is valid.", :is-string false, :is-array false} {:api-name "vote-participation-key", :field-name "voteParticipationKey", :property-name "VoteParticipationKey", :type "string", :description "\\[vote\\] root participation public key (if any) currently registered for this round.", :is-string true, :is-array false}), :description "AccountParticipation describes the parameters used by this account in consensus protocol."} {:name "Version", :properties ({:api-name "build", :field-name "build", :property-name "Build", :type "BuildVersion", :description nil, :is-string false, :is-array false} {:api-name "genesis_hash_b64", :field-name "genesis_hash_b64", :property-name "Genesis_hash_b64", :type "string", :description nil, :is-string true, :is-array false} {:api-name "genesis_id", :field-name "genesis_id", :property-name "Genesis_id", :type "string", :description nil, :is-string true, :is-array false} {:api-name "versions", :field-name "versions", :property-name "Versions", :type "string[]", :description nil, :is-string false, :is-array true}), :description "algod version information."} {:name "AssetParams", :properties ({:api-name "default-frozen", :field-name "defaultFrozen", :property-name "DefaultFrozen", :type "bool", :description "\\[df\\] Whether holdings of this asset are frozen by default.", :is-string false, :is-array false} {:api-name "creator", :field-name "creator", :property-name "Creator", :type "string", :description "The address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case.", :is-string true, :is-array false} {:api-name "decimals", :field-name "decimals", :property-name "Decimals", :type "ulong", :description "\\[dc\\] The number of digits to use after the decimal point when displaying this asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in tenths. If 2, the base unit of the asset is in hundredths, and so on. This value must be between 0 and 19 (inclusive).", :is-string false, :is-array false} {:api-name "freeze", :field-name "freeze", :property-name "Freeze", :type "string", :description "\\[f\\] Address of account used to freeze holdings of this asset.  If empty, freezing is not permitted.", :is-string true, :is-array false} {:api-name "reserve", :field-name "reserve", :property-name "Reserve", :type "string", :description "\\[r\\] Address of account holding reserve (non-minted) units of this asset.", :is-string true, :is-array false} {:api-name "unit-name-b64", :field-name "unitNameB64", :property-name "UnitNameB64", :type "string", :description "Base64 encoded name of a unit of this asset, as supplied by the creator.", :is-string true, :is-array false} {:api-name "name", :field-name "name", :property-name "Name", :type "string", :description "\\[an\\] Name of this asset, as supplied by the creator. Included only when the asset name is composed of printable utf-8 characters.", :is-string true, :is-array false} {:api-name "url-b64", :field-name "urlB64", :property-name "UrlB64", :type "string", :description "Base64 encoded URL where more information about the asset can be retrieved.", :is-string true, :is-array false} {:api-name "total", :field-name "total", :property-name "Total", :type "ulong", :description "\\[t\\] The total number of units of this asset.", :is-string false, :is-array false} {:api-name "manager", :field-name "manager", :property-name "Manager", :type "string", :description "\\[m\\] Address of account used to manage the keys of this asset and to destroy it.", :is-string true, :is-array false} {:api-name "name-b64", :field-name "nameB64", :property-name "NameB64", :type "string", :description "Base64 encoded name of this asset, as supplied by the creator.", :is-string true, :is-array false} {:api-name "url", :field-name "url", :property-name "Url", :type "string", :description "\\[au\\] URL where more information about the asset can be retrieved. Included only when the URL is composed of printable utf-8 characters.", :is-string true, :is-array false} {:api-name "unit-name", :field-name "unitName", :property-name "UnitName", :type "string", :description "\\[un\\] Name of a unit of this asset, as supplied by the creator. Included only when the name of a unit of this asset is composed of printable utf-8 characters.", :is-string true, :is-array false} {:api-name "clawback", :field-name "clawback", :property-name "Clawback", :type "string", :description "\\[c\\] Address of account used to clawback holdings of this asset.  If empty, clawback is not permitted.", :is-string true, :is-array false} {:api-name "metadata-hash", :field-name "metadataHash", :property-name "MetadataHash", :type "string", :description "\\[am\\] A commitment to some unspecified asset metadata. The format of this metadata is up to the application.", :is-string true, :is-array false}), :description "AssetParams specifies the parameters for an asset.\n\n\\[apar\\] when part of an AssetConfig transaction.\n\nDefinition:\ndata/transactions/asset.go : AssetParams"} {:name "DryrunTxnResult", :properties ({:api-name "app-call-messages", :field-name "appCallMessages", :property-name "AppCallMessages", :type "string[]", :description nil, :is-string false, :is-array true} {:api-name "disassembly", :field-name "disassembly", :property-name "Disassembly", :type "string[]", :description "Disassembled program line by line.", :is-string false, :is-array true} {:api-name "logs", :field-name "logs", :property-name "Logs", :type "string[]", :description nil, :is-string false, :is-array true} {:api-name "logic-sig-disassembly", :field-name "logicSigDisassembly", :property-name "LogicSigDisassembly", :type "string[]", :description "Disassembled lsig program line by line.", :is-string false, :is-array true} {:api-name "local-deltas", :field-name "localDeltas", :property-name "LocalDeltas", :type "AccountStateDelta[]", :description nil, :is-string false, :is-array true} {:api-name "logic-sig-trace", :field-name "logicSigTrace", :property-name "LogicSigTrace", :type "DryrunState[]", :description nil, :is-string false, :is-array true} {:api-name "cost", :field-name "cost", :property-name "Cost", :type "ulong", :description "Execution cost of app call transaction", :is-string false, :is-array false} {:api-name "logic-sig-messages", :field-name "logicSigMessages", :property-name "LogicSigMessages", :type "string[]", :description nil, :is-string false, :is-array true} {:api-name "app-call-trace", :field-name "appCallTrace", :property-name "AppCallTrace", :type "DryrunState[]", :description nil, :is-string false, :is-array true} {:api-name "global-delta", :field-name "globalDelta", :property-name "GlobalDelta", :type "StateDelta", :description nil, :is-string false, :is-array false}), :description "DryrunTxnResult contains any LogicSig or ApplicationCall program debug information and state updates from a dryrun.", :last true})
clj꞉algoapi-gen.core꞉> 
